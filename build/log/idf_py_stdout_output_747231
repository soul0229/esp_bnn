[1/12] Performing build step for 'bootloader'
[1/1] cd /media/wish/Disk/esp/camera_example/build/bootloader/esp-idf/esptool_py && /home/wish/.espressif/python_env/idf5.3_py3.12_env/bin/python /media/wish/Disk/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x10000 bootloader 0x0 /media/wish/Disk/esp/camera_example/build/bootloader/bootloader.bin
Bootloader binary size 0x5810 bytes. 0xa7f0 bytes (66%) free.
[2/12] No install step for 'bootloader'
[3/12] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/take_picture.c.obj
/media/wish/Disk/esp/camera_example/main/take_picture.c: In function 'app_main':
/media/wish/Disk/esp/camera_example/main/take_picture.c:185:45: warning: initialization of 'struct RGB_CH (*)[pic->width]' from incompatible pointer type 'uint8_t *' {aka 'unsigned char *'} [-Wincompatible-pointer-types]
  185 |         struct RGB_CH (*data)[pic->width] = pic->buf;
      |                                             ^~~
[4/12] Completed 'bootloader'
[5/12] Building C object esp-idf/espressif__esp32-camera/CMakeFiles/__idf_espressif__esp32-camera.dir/driver/esp_camera.c.obj
[6/12] Linking C static library esp-idf/espressif__esp32-camera/libespressif__esp32-camera.a
[7/12] Linking C static library esp-idf/main/libmain.a
[8/12] Generating ld/sections.ld
[9/12] Linking CXX executable camera_example.elf
[10/12] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /media/wish/Disk/esp/camera_example/build/camera_example.bin
[11/12] cd /media/wish/Disk/esp/camera_example/build/esp-idf/esptool_py && /home/wish/.espressif/python_env/idf5.3_py3.12_env/bin/python /media/wish/Disk/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x10000 partition --type app /media/wish/Disk/esp/camera_example/build/partition_table/partition-table.bin /media/wish/Disk/esp/camera_example/build/camera_example.bin
camera_example.bin binary size 0x3ad40 bytes. Smallest app partition is 0x100000 bytes. 0xc52c0 bytes (77%) free.
[11/12] cd /media/wish/Disk/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/media/wish/Disk/esp/esp-idf -D "SERIAL_TOOL=/home/wish/.espressif/python_env/idf5.3_py3.12_env/bin/python;;/media/wish/Disk/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/media/wish/Disk/esp/camera_example/build -P /media/wish/Disk/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32s3 -p /dev/ttyACM0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size detect 0x0 bootloader/bootloader.bin 0x20000 camera_example.bin 0x10000 partition_table/partition-table.bin 0x15000 ota_data_initial.bin
esptool.py v4.8.1
Serial port /dev/ttyACM0
Connecting....
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_3v3)
Crystal is 40MHz
MAC: 24:ec:4a:01:56:40
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Auto-detected Flash size: 16MB
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00020000 to 0x0005afff...
Flash will be erased from 0x00010000 to 0x00010fff...
Flash will be erased from 0x00015000 to 0x00016fff...
SHA digest in image updated
Compressed 22544 bytes to 13915...
Writing at 0x00000000... (100 %)
Wrote 22544 bytes (13915 compressed) at 0x00000000 in 0.6 seconds (effective 286.8 kbit/s)...
Hash of data verified.
Compressed 240960 bytes to 128391...
Writing at 0x00020000... (12 %)
Writing at 0x0002cb97... (25 %)
Writing at 0x0003345b... (37 %)
Writing at 0x00039695... (50 %)
Writing at 0x0003fe3e... (62 %)
Writing at 0x00048283... (75 %)
Writing at 0x0004eff4... (87 %)
Writing at 0x000553de... (100 %)
Wrote 240960 bytes (128391 compressed) at 0x00020000 in 3.1 seconds (effective 625.3 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 139...
Writing at 0x00010000... (100 %)
Wrote 3072 bytes (139 compressed) at 0x00010000 in 0.1 seconds (effective 422.7 kbit/s)...
Hash of data verified.
Compressed 8192 bytes to 31...
Writing at 0x00015000... (100 %)
Wrote 8192 bytes (31 compressed) at 0x00015000 in 0.1 seconds (effective 848.8 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
